[core]
	longpaths = true
	editor = nvim
[user]
	email = johnqwerty.lee1@gmail.com
	name = John Lee
[branch]
	sort = committerdate
[alias]
	alias = config --get-regexp alias
	kick = "!git commit --allow-empty -m \"kick pipe\" && git push"
	pushf = push --force-with-lease
	pushff = push -f
	unskip = update-index --no-skip-worktree
	skip = update-index --skip-worktree
	list-skipped = "!git ls-files -v . | grep ^S"
	fetchall = fetch --all
	prdiff = "!f() { branch=${1:-HEAD}; git diff $(git merge-base master \"$branch\"); }; f"
	prlog = "!f() { branch=${1:-HEAD}; git log --oneline $(git merge-base master \"$branch\")..\"$branch\"; }; f"
	pradds = "!f() { branch=${1:-HEAD}; git diff --name-only --diff-filter=A $(git merge-base master \"$branch\"); }; f"
	prmods = "!f() { branch=${1:-HEAD}; git diff --name-only --diff-filter=M $(git merge-base master \"$branch\"); }; f"
	fzcheckout = !git checkout $(git branch | tac | fzf)
	ghclone = "!f() { git clone git@github.com:\"$1\"/\"$2\"; }; f"
	ghremoteadd = "!f() { git remote add \"$1\" git@github.com:\"$2\"/\"$3\"; }; f"
	pullup = pull upstream master
	pushup = push upstream master
	resetup = "!git fetch && git reset --hard @{upstream}"
	rebaseup = "!git fetch && git rebase @{upstream}"
	restorehard = "!f() { git restore --staged $1 && git restore $1; }; f"
	pushup = "!git push -u origin $(git branch --show-current)"
	lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	amend = commit -a --noedit
	append = "!f() { git add -A && git commit -m \"$1\"; }; f"
[push]
	autoSetupRemote = true
[http]
	postbuffer = 52428800
[rebase]
	autoStash = true
[safe]
	directory = *
[fetch]
	writeCommitGraph = true
[init]
	defaultBranch = master
